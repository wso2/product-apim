[server]
#hostname = "localhost"
node_ip = "127.0.0.1"
#offset=0
mode = "single" #single or ha
base_path = "${carbon.protocol}://${carbon.host}:${carbon.management.port}"
server_role = "default"

[super_admin]
username = "admin"
password = "admin"
create_admin_account = true

[user_store]
type = "database_unique_id"

[database.apim_db]
driver = "$env{API_MANAGER_DATABASE_DRIVER}"
url = "$env{API_MANAGER_DATABASE_URL}"
username = "$env{API_MANAGER_DATABASE_USERNAME}"
password = "$env{API_MANAGER_DATABASE_PASSWORD}"
validationQuery = "$env{API_MANAGER_DATABASE_VALIDATION_QUERY}"

[database.shared_db]
driver = "$env{SHARED_DATABASE_DRIVER}"
url = "$env{SHARED_DATABASE_URL}"
username = "$env{SHARED_DATABASE_USERNAME}"
password = "$env{SHARED_DATABASE_PASSWORD}"
validationQuery = "$env{SHARED_DATABASE_VALIDATION_QUERY}"

[keystore.tls]
file_name =  "wso2carbon.jks"
type =  "JKS"
password =  "wso2carbon"
alias =  "wso2carbon"
key_password =  "wso2carbon"

[[apim.gateway.environment]]
name = "Production and Sandbox"
type = "hybrid"
display_in_api_console = true
description = "This is a hybrid gateway that handles both production and sandbox token traffic."
show_as_token_endpoint_url = true
service_url = "https://localhost:${mgt.transport.https.port}/services/"
username = "admin"
password = "admin"
ws_endpoint = "ws://localhost:9099"
http_endpoint = "http://localhost:${http.nio.port}"
https_endpoint = "https://localhost:${https.nio.port}"

[[apim.gateway.environment]]
name = "Hybrid 2"
type = "hybrid"
display_in_api_console = true
description = "This is a hybrid gateway 2 that handles both production and sandbox token traffic."
show_as_token_endpoint_url = true
service_url = "https://localhost:9445/services/"
username = "admin"
password = "admin"
ws_endpoint = "ws://localhost:9099"
http_endpoint = "http://localhost:8282"
https_endpoint = "https://localhost:8245"

[apim.analytics]
enable = true
store_api_url = "https://localhost:9446"
username = "$ref{super_admin.username}"
password = "$ref{super_admin.password}"

[[apim.analytics.analytics_node]]
analytics_url ="tcp://localhost:7614"
analytics_auth_url ="ssl://localhost:7714"
type = "failover"

[apim.jwt]
enable = true
encoding = "base64" # base64,base64url
enable_user_claims = true
[apim.devportal]
display_multiple_versions = true
display_deprecated_apis = true

[apim.cors]
allow_origins = "*"
allow_methods = ["GET","PUT","POST","DELETE","PATCH","OPTIONS"]
allow_headers = ["authorization","Access-Control-Allow-Origin","Content-Type","SOAPAction"]
allow_credentials = false

[apim.workflow]
enable = false
service_url = "http://localhost:10263/BPMNProcessServerApp-1.0.0"

[transport.http]
socket_timeout=20000

[synapse_properties]
synapse_commons_json_buildValidNCNames=true


[apim.notification]
from_address = "APIM.com"
username = "APIM"
password = "APIM+123"
hostname = "localhost"
port = 3025
enable_start_tls = false
enable_authentication = true

[apim.token.revocation.persistent_notifier]
hostname = "https://localhost:9943/etcdmock/v2/keys/jti/"

[transport.passthru_https.listener]
ssl_profile_interval = 6000

[apim.certificate_reloader]
period = "1m"

[[event_handler]]
name="userPostSelfRegistration"
subscriptions=["POST_ADD_USER"]

[database.local]
url = "jdbc:h2:./repository/database/WSO2CARBON_DB;DB_CLOSE_ON_EXIT=FALSE"

[[event_listener]]
id = "token_revocation"
type = "org.wso2.carbon.identity.core.handler.AbstractIdentityHandler"
name = "org.wso2.is.notification.ApimOauthEventInterceptor"
order = 1
[event_listener.properties]
notification_endpoint = "https://localhost:${mgt.transport.https.port}/internal/data/v1/notify"
username = "${admin.username}"
password = "${admin.password}"
'header.X-WSO2-KEY-MANAGER' = "default"
