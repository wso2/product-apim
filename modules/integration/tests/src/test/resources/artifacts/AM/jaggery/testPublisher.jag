<%
//Order of these operations are important as we fetch results based on order.
//If you add new test add them to bottom of this file and update validate response method
//available in host object test class.
var publisher = require('apipublisher');
var publisherHostObj = new publisher.APIProvider("admin");
print("==");
print(publisherHostObj.getExternalAPIStores());
print("==");
print(publisherHostObj.validateRoles('admin', 'admin'));
print("==");
print(publisherHostObj.isURLValid("https","https://www.google.com"));
print("==");
print(publisherHostObj.getAPIsByProvider("admin"));
print("==");
print(publisherHostObj.getSubscribedAPIs("admin"));
print("==");
print(publisherHostObj.getAPI("admin","HostObjectTestAPI","1.0.0"));
print("==");
print(publisherHostObj.getTierPermissions());
print("==");
print(publisherHostObj.getTiers());
print("==");
print(publisherHostObj.getAllAPIs());
print("==");
print(publisherHostObj.getAPIsByProvider("admin"));
print("==");
print(publisherHostObj.getSubscribersOfAPI("admin","HostObjectTestAPI","1.0.0"));
print("==");
print(publisherHostObj.isContextExist("HostObjectTestAPI","HostObjectTestAPI"));
print("==");
print(publisherHostObj.searchAPIs("admin","name:HostObjectTestAPI"));
print("==");
print(publisherHostObj.hasCreatePermission());
print("==");
print(publisherHostObj.hasManageTierPermission());
print("==");
print(publisherHostObj.hasUserPermissions("admin"));
print("==");
print(publisherHostObj.hasPublishPermission("admin"));
print("==");
print(publisherHostObj.getAuthServerURL());
print("==");
print(publisherHostObj.getCustomInSequences());
print("==");
print(publisherHostObj.getCustomOutSequences());
print("==");
print(publisherHostObj.getHTTPsURL());
print("==");
print(publisherHostObj.isSynapseGateway());
print("==");
print(publisherHostObj.loadRegistryOfTenant("carbon.super"));
print("==");
print(publisherHostObj.updateDocumentation("admin","HostObjectTestAPI","1.0.0","Doc-Name", "How To", "summary","In-line"));
print("==");
print(publisherHostObj.addInlineContent("admin","HostObjectTestAPI","1.0.0","help","this is helpe"));
print("==");
print(publisherHostObj.getInlineContent("admin","HostObjectTestAPI","1.0.0","help"));
print("==");
print(publisherHostObj.getAllDocumentation("admin@carbon.super","HostObjectTestAPI","1.0.0"));
print("==");
print(publisherHostObj.searchAccessTokens("*:*"));
print("==");
print(publisherHostObj.getSubscriberCountByAPIs("admin@carbon.super"));
print("==");
print(publisherHostObj.getSubscriberCountByAPIVersions("admin@carbon.super"));
print("==");
print(publisherHostObj.getExternalAPIStores());
print("==");
var apiData = {};
apiData["provider"] = "admin";
apiData["name"] = "HostObjectTestAPI";
apiData["version"] = "1.0.0";
apiData["apiName"] = "HostObjectTestAPI";
print(publisherHostObj.isAPIOlderVersionExist(apiData));
print("==");
print(publisherHostObj.updateSubscriptionStatus(apiData,"BLOCKED","1"));
print("==");

var tierData = {};
tierData["tierName"] = "Gold";
tierData["permissiontype"] = "Deny";
tierData["roles"] = "admin";
print(publisherHostObj.updateTierPermissions(tierData));
print("==");
//print(publisherHostObj.updateExternalAPIStores(apiData));
//print(publisherHostObj.createNewAPIVersion("admin","HostObjectTestAPI","1.0.0","1.0.1"));
//print(publisherHostObj.searchAccessTokens("admin"));
//print(publisherHostObj.getSubscriberCountByAPIVersions());
var apiData1 = {};
apiData1["provider"] = "admin";
apiData1["name"] = "HostObjectTestAPI";
apiData1["version"] = "1.0.0";
apiData1["apiName"] = "HostObjectTestAPI";
//print(publisherHostObj.updateExternalAPIStores(apiData1));
%>