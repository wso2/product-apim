/*
 * WSO2 API Manager - Admin
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Admin Portal**. Please see [full OpenAPI Specification](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin.v1/src/main/resources/admin-api.yaml) of the API which is written using [OAS 3.0](http://swagger.io/) specification.  # Authentication Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_admin\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_admin\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api_admin\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for Admin REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorizations** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd>&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<gateway_port>/token ``` **Sample request** ``` curl https://localhost:8243/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:admin apim:tier_view\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:admin apim:tier_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/f5ac2ca9fb22afef6ed6) 
 *
 * The version of the OpenAPI document: v2
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.admin.api.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import com.fasterxml.jackson.annotation.JsonCreator;
/**
* WorkflowInfoDTO
*/

public class WorkflowInfoDTO {
            /**
* Type of the Workflow Request. It shows which type of request is it. 
*/
    @JsonAdapter(WorkflowTypeEnum.Adapter.class)
public enum WorkflowTypeEnum {
        APPLICATION_CREATION("APPLICATION_CREATION"),
        
        SUBSCRIPTION_CREATION("SUBSCRIPTION_CREATION"),
        
        USER_SIGNUP("USER_SIGNUP"),
        
        APPLICATION_REGISTRATION_PRODUCTION("APPLICATION_REGISTRATION_PRODUCTION"),
        
        APPLICATION_REGISTRATION_SANDBOX("APPLICATION_REGISTRATION_SANDBOX"),
        
        APPLICATION_DELETION("APPLICATION_DELETION"),
        
        API_STATE("API_STATE"),
        
        SUBSCRIPTION_DELETION("SUBSCRIPTION_DELETION"),
        
        SUBSCRIPTION_UPDATE("SUBSCRIPTION_UPDATE");

private String value;

WorkflowTypeEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static WorkflowTypeEnum fromValue(String value) {
    for (WorkflowTypeEnum b : WorkflowTypeEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<WorkflowTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final WorkflowTypeEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public WorkflowTypeEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return WorkflowTypeEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_WORKFLOW_TYPE = "workflowType";
        @SerializedName(SERIALIZED_NAME_WORKFLOW_TYPE)
            private WorkflowTypeEnum workflowType;

            /**
* Show the Status of the the workflow request whether it is approved or created. 
*/
    @JsonAdapter(WorkflowStatusEnum.Adapter.class)
public enum WorkflowStatusEnum {
        APPROVED("APPROVED"),
        
        CREATED("CREATED");

private String value;

WorkflowStatusEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static WorkflowStatusEnum fromValue(String value) {
    for (WorkflowStatusEnum b : WorkflowStatusEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<WorkflowStatusEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final WorkflowStatusEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public WorkflowStatusEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return WorkflowStatusEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_WORKFLOW_STATUS = "workflowStatus";
        @SerializedName(SERIALIZED_NAME_WORKFLOW_STATUS)
            private WorkflowStatusEnum workflowStatus;

        public static final String SERIALIZED_NAME_CREATED_TIME = "createdTime";
        @SerializedName(SERIALIZED_NAME_CREATED_TIME)
            private String createdTime;

        public static final String SERIALIZED_NAME_UPDATED_TIME = "updatedTime";
        @SerializedName(SERIALIZED_NAME_UPDATED_TIME)
            private String updatedTime;

        public static final String SERIALIZED_NAME_REFERENCE_ID = "referenceId";
        @SerializedName(SERIALIZED_NAME_REFERENCE_ID)
            private String referenceId;

        public static final String SERIALIZED_NAME_PROPERTIES = "properties";
        @SerializedName(SERIALIZED_NAME_PROPERTIES)
            private Object properties;

        public static final String SERIALIZED_NAME_DESCRIPTION = "description";
        @SerializedName(SERIALIZED_NAME_DESCRIPTION)
            private String description;


        public WorkflowInfoDTO workflowType(WorkflowTypeEnum workflowType) {
        
        this.workflowType = workflowType;
        return this;
        }

    /**
        * Type of the Workflow Request. It shows which type of request is it. 
    * @return workflowType
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "APPLICATION_CREATION", value = "Type of the Workflow Request. It shows which type of request is it. ")
    
    public WorkflowTypeEnum getWorkflowType() {
        return workflowType;
    }


    public void setWorkflowType(WorkflowTypeEnum workflowType) {
        this.workflowType = workflowType;
    }


        public WorkflowInfoDTO workflowStatus(WorkflowStatusEnum workflowStatus) {
        
        this.workflowStatus = workflowStatus;
        return this;
        }

    /**
        * Show the Status of the the workflow request whether it is approved or created. 
    * @return workflowStatus
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "APPROVED", value = "Show the Status of the the workflow request whether it is approved or created. ")
    
    public WorkflowStatusEnum getWorkflowStatus() {
        return workflowStatus;
    }


    public void setWorkflowStatus(WorkflowStatusEnum workflowStatus) {
        this.workflowStatus = workflowStatus;
    }


        public WorkflowInfoDTO createdTime(String createdTime) {
        
        this.createdTime = createdTime;
        return this;
        }

    /**
        * Time of the the workflow request created. 
    * @return createdTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "2020-02-10 10:10:19.704", value = "Time of the the workflow request created. ")
    
    public String getCreatedTime() {
        return createdTime;
    }


    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


        public WorkflowInfoDTO updatedTime(String updatedTime) {
        
        this.updatedTime = updatedTime;
        return this;
        }

    /**
        * Time of the the workflow request updated. 
    * @return updatedTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "2020-02-10 10:10:19.704", value = "Time of the the workflow request updated. ")
    
    public String getUpdatedTime() {
        return updatedTime;
    }


    public void setUpdatedTime(String updatedTime) {
        this.updatedTime = updatedTime;
    }


        public WorkflowInfoDTO referenceId(String referenceId) {
        
        this.referenceId = referenceId;
        return this;
        }

    /**
        * Workflow external reference is used to identify the workflow requests uniquely. 
    * @return referenceId
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "5871244b-d6f3-466e-8995-8accd1e64303", value = "Workflow external reference is used to identify the workflow requests uniquely. ")
    
    public String getReferenceId() {
        return referenceId;
    }


    public void setReferenceId(String referenceId) {
        this.referenceId = referenceId;
    }


        public WorkflowInfoDTO properties(Object properties) {
        
        this.properties = properties;
        return this;
        }

    /**
        * Get properties
    * @return properties
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public Object getProperties() {
        return properties;
    }


    public void setProperties(Object properties) {
        this.properties = properties;
    }


        public WorkflowInfoDTO description(String description) {
        
        this.description = description;
        return this;
        }

    /**
        * description is a message with basic details about the workflow request. 
    * @return description
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Approve application [APP1] creation request from application creator - admin with throttling tier - 10MinPer", value = "description is a message with basic details about the workflow request. ")
    
    public String getDescription() {
        return description;
    }


    public void setDescription(String description) {
        this.description = description;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            WorkflowInfoDTO workflowInfo = (WorkflowInfoDTO) o;
            return Objects.equals(this.workflowType, workflowInfo.workflowType) &&
            Objects.equals(this.workflowStatus, workflowInfo.workflowStatus) &&
            Objects.equals(this.createdTime, workflowInfo.createdTime) &&
            Objects.equals(this.updatedTime, workflowInfo.updatedTime) &&
            Objects.equals(this.referenceId, workflowInfo.referenceId) &&
            Objects.equals(this.properties, workflowInfo.properties) &&
            Objects.equals(this.description, workflowInfo.description);
    }

    @Override
    public int hashCode() {
        return Objects.hash(workflowType, workflowStatus, createdTime, updatedTime, referenceId, properties, description);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class WorkflowInfoDTO {\n");
    sb.append("    workflowType: ").append(toIndentedString(workflowType)).append("\n");
    sb.append("    workflowStatus: ").append(toIndentedString(workflowStatus)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    updatedTime: ").append(toIndentedString(updatedTime)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

