/*
 * WSO2 API Manager - Publisher API
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.  # Authentication Our REST APIs are protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A Sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_publisher\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_publisher\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorization** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<gateway_port>/token ``` **Sample request** ``` curl https://localhost:8243/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:api_create apim:api_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9) 
 *
 * The version of the OpenAPI document: v2
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APICorsConfigurationDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIMonetizationInfoDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIProductBusinessInformationDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.APIScopeDTO;
import org.wso2.am.integration.clients.publisher.api.v1.dto.ProductAPIDTO;
import com.fasterxml.jackson.annotation.JsonCreator;
/**
* APIProductDTO
*/

public class APIProductDTO {
        public static final String SERIALIZED_NAME_ID = "id";
        @SerializedName(SERIALIZED_NAME_ID)
            private String id;

        public static final String SERIALIZED_NAME_NAME = "name";
        @SerializedName(SERIALIZED_NAME_NAME)
            private String name;

        public static final String SERIALIZED_NAME_CONTEXT = "context";
        @SerializedName(SERIALIZED_NAME_CONTEXT)
            private String context;

        public static final String SERIALIZED_NAME_DESCRIPTION = "description";
        @SerializedName(SERIALIZED_NAME_DESCRIPTION)
            private String description;

        public static final String SERIALIZED_NAME_PROVIDER = "provider";
        @SerializedName(SERIALIZED_NAME_PROVIDER)
            private String provider;

        public static final String SERIALIZED_NAME_HAS_THUMBNAIL = "hasThumbnail";
        @SerializedName(SERIALIZED_NAME_HAS_THUMBNAIL)
            private Boolean hasThumbnail;

            /**
* State of the API product. Only published api products are visible on the Devportal 
*/
    @JsonAdapter(StateEnum.Adapter.class)
public enum StateEnum {
        CREATED("CREATED"),
        
        PUBLISHED("PUBLISHED");

private String value;

StateEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static StateEnum fromValue(String value) {
    for (StateEnum b : StateEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<StateEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public StateEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return StateEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_STATE = "state";
        @SerializedName(SERIALIZED_NAME_STATE)
            private StateEnum state;

        public static final String SERIALIZED_NAME_ENABLE_SCHEMA_VALIDATION = "enableSchemaValidation";
        @SerializedName(SERIALIZED_NAME_ENABLE_SCHEMA_VALIDATION)
            private Boolean enableSchemaValidation;

        public static final String SERIALIZED_NAME_ENABLE_STORE = "enableStore";
        @SerializedName(SERIALIZED_NAME_ENABLE_STORE)
            private Boolean enableStore;

        public static final String SERIALIZED_NAME_TEST_KEY = "testKey";
        @SerializedName(SERIALIZED_NAME_TEST_KEY)
            private String testKey;

        public static final String SERIALIZED_NAME_IS_REVISION = "isRevision";
        @SerializedName(SERIALIZED_NAME_IS_REVISION)
            private Boolean isRevision;

        public static final String SERIALIZED_NAME_REVISIONED_API_PRODUCT_ID = "revisionedApiProductId";
        @SerializedName(SERIALIZED_NAME_REVISIONED_API_PRODUCT_ID)
            private String revisionedApiProductId;

        public static final String SERIALIZED_NAME_REVISION_ID = "revisionId";
        @SerializedName(SERIALIZED_NAME_REVISION_ID)
            private Integer revisionId;

        public static final String SERIALIZED_NAME_RESPONSE_CACHING_ENABLED = "responseCachingEnabled";
        @SerializedName(SERIALIZED_NAME_RESPONSE_CACHING_ENABLED)
            private Boolean responseCachingEnabled;

        public static final String SERIALIZED_NAME_CACHE_TIMEOUT = "cacheTimeout";
        @SerializedName(SERIALIZED_NAME_CACHE_TIMEOUT)
            private Integer cacheTimeout;

            /**
* The visibility level of the API. Accepts one of the following. PUBLIC, PRIVATE, RESTRICTED.
*/
    @JsonAdapter(VisibilityEnum.Adapter.class)
public enum VisibilityEnum {
        PUBLIC("PUBLIC"),
        
        PRIVATE("PRIVATE"),
        
        RESTRICTED("RESTRICTED");

private String value;

VisibilityEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static VisibilityEnum fromValue(String value) {
    for (VisibilityEnum b : VisibilityEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<VisibilityEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final VisibilityEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VisibilityEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return VisibilityEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
        @SerializedName(SERIALIZED_NAME_VISIBILITY)
            private VisibilityEnum visibility = VisibilityEnum.PUBLIC;

        public static final String SERIALIZED_NAME_VISIBLE_ROLES = "visibleRoles";
        @SerializedName(SERIALIZED_NAME_VISIBLE_ROLES)
            private List<String> visibleRoles = null;

        public static final String SERIALIZED_NAME_VISIBLE_TENANTS = "visibleTenants";
        @SerializedName(SERIALIZED_NAME_VISIBLE_TENANTS)
            private List<String> visibleTenants = null;

            /**
* Defines whether the API Product is restricted to certain set of publishers or creators or is it visible to all the publishers and creators. If the accessControl restriction is none, this API Product can be modified by all the publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators, based on the restriction. 
*/
    @JsonAdapter(AccessControlEnum.Adapter.class)
public enum AccessControlEnum {
        NONE("NONE"),
        
        RESTRICTED("RESTRICTED");

private String value;

AccessControlEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static AccessControlEnum fromValue(String value) {
    for (AccessControlEnum b : AccessControlEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<AccessControlEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final AccessControlEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AccessControlEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return AccessControlEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_ACCESS_CONTROL = "accessControl";
        @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL)
            private AccessControlEnum accessControl = AccessControlEnum.NONE;

        public static final String SERIALIZED_NAME_ACCESS_CONTROL_ROLES = "accessControlRoles";
        @SerializedName(SERIALIZED_NAME_ACCESS_CONTROL_ROLES)
            private List<String> accessControlRoles = null;

        public static final String SERIALIZED_NAME_GATEWAY_ENVIRONMENTS = "gatewayEnvironments";
        @SerializedName(SERIALIZED_NAME_GATEWAY_ENVIRONMENTS)
            private List<String> gatewayEnvironments = null;

            /**
* The API type to be used. Accepted values are API, APIPRODUCT
*/
    @JsonAdapter(ApiTypeEnum.Adapter.class)
public enum ApiTypeEnum {
        API("API"),
        
        APIPRODUCT("APIPRODUCT");

private String value;

ApiTypeEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static ApiTypeEnum fromValue(String value) {
    for (ApiTypeEnum b : ApiTypeEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<ApiTypeEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final ApiTypeEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public ApiTypeEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return ApiTypeEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_API_TYPE = "apiType";
        @SerializedName(SERIALIZED_NAME_API_TYPE)
            private ApiTypeEnum apiType;

        public static final String SERIALIZED_NAME_TRANSPORT = "transport";
        @SerializedName(SERIALIZED_NAME_TRANSPORT)
            private List<String> transport = null;

        public static final String SERIALIZED_NAME_TAGS = "tags";
        @SerializedName(SERIALIZED_NAME_TAGS)
            private List<String> tags = null;

        public static final String SERIALIZED_NAME_POLICIES = "policies";
        @SerializedName(SERIALIZED_NAME_POLICIES)
            private List<String> policies = null;

        public static final String SERIALIZED_NAME_API_THROTTLING_POLICY = "apiThrottlingPolicy";
        @SerializedName(SERIALIZED_NAME_API_THROTTLING_POLICY)
            private String apiThrottlingPolicy;

        public static final String SERIALIZED_NAME_AUTHORIZATION_HEADER = "authorizationHeader";
        @SerializedName(SERIALIZED_NAME_AUTHORIZATION_HEADER)
            private String authorizationHeader;

        public static final String SERIALIZED_NAME_SECURITY_SCHEME = "securityScheme";
        @SerializedName(SERIALIZED_NAME_SECURITY_SCHEME)
            private List<String> securityScheme = null;

            /**
* The subscription availability. Accepts one of the following. CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.
*/
    @JsonAdapter(SubscriptionAvailabilityEnum.Adapter.class)
public enum SubscriptionAvailabilityEnum {
        CURRENT_TENANT("CURRENT_TENANT"),
        
        ALL_TENANTS("ALL_TENANTS"),
        
        SPECIFIC_TENANTS("SPECIFIC_TENANTS");

private String value;

SubscriptionAvailabilityEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static SubscriptionAvailabilityEnum fromValue(String value) {
    for (SubscriptionAvailabilityEnum b : SubscriptionAvailabilityEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<SubscriptionAvailabilityEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final SubscriptionAvailabilityEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public SubscriptionAvailabilityEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return SubscriptionAvailabilityEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_SUBSCRIPTION_AVAILABILITY = "subscriptionAvailability";
        @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_AVAILABILITY)
            private SubscriptionAvailabilityEnum subscriptionAvailability = SubscriptionAvailabilityEnum.ALL_TENANTS;

        public static final String SERIALIZED_NAME_SUBSCRIPTION_AVAILABLE_TENANTS = "subscriptionAvailableTenants";
        @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_AVAILABLE_TENANTS)
            private List<String> subscriptionAvailableTenants = null;

        public static final String SERIALIZED_NAME_ADDITIONAL_PROPERTIES = "additionalProperties";
        @SerializedName(SERIALIZED_NAME_ADDITIONAL_PROPERTIES)
            private Map<String, String> additionalProperties = null;

        public static final String SERIALIZED_NAME_MONETIZATION = "monetization";
        @SerializedName(SERIALIZED_NAME_MONETIZATION)
            private APIMonetizationInfoDTO monetization;

        public static final String SERIALIZED_NAME_BUSINESS_INFORMATION = "businessInformation";
        @SerializedName(SERIALIZED_NAME_BUSINESS_INFORMATION)
            private APIProductBusinessInformationDTO businessInformation;

        public static final String SERIALIZED_NAME_CORS_CONFIGURATION = "corsConfiguration";
        @SerializedName(SERIALIZED_NAME_CORS_CONFIGURATION)
            private APICorsConfigurationDTO corsConfiguration;

        public static final String SERIALIZED_NAME_CREATED_TIME = "createdTime";
        @SerializedName(SERIALIZED_NAME_CREATED_TIME)
            private String createdTime;

        public static final String SERIALIZED_NAME_LAST_UPDATED_TIME = "lastUpdatedTime";
        @SerializedName(SERIALIZED_NAME_LAST_UPDATED_TIME)
            private String lastUpdatedTime;

        public static final String SERIALIZED_NAME_APIS = "apis";
        @SerializedName(SERIALIZED_NAME_APIS)
            private List<ProductAPIDTO> apis = null;

        public static final String SERIALIZED_NAME_SCOPES = "scopes";
        @SerializedName(SERIALIZED_NAME_SCOPES)
            private List<APIScopeDTO> scopes = null;

        public static final String SERIALIZED_NAME_CATEGORIES = "categories";
        @SerializedName(SERIALIZED_NAME_CATEGORIES)
            private List<String> categories = null;


        public APIProductDTO id(String id) {
        
        this.id = id;
        return this;
        }

    /**
        * UUID of the api product 
    * @return id
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "01234567-0123-0123-0123-012345678901", value = "UUID of the api product ")
    
    public String getId() {
        return id;
    }


    public void setId(String id) {
        this.id = id;
    }


        public APIProductDTO name(String name) {
        
        this.name = name;
        return this;
        }

    /**
        * Name of the API Product
    * @return name
    **/
      @ApiModelProperty(example = "PizzaShackAPIProduct", required = true, value = "Name of the API Product")
    
    public String getName() {
        return name;
    }


    public void setName(String name) {
        this.name = name;
    }


        public APIProductDTO context(String context) {
        
        this.context = context;
        return this;
        }

    /**
        * Get context
    * @return context
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "pizzaproduct", value = "")
    
    public String getContext() {
        return context;
    }


    public void setContext(String context) {
        this.context = context;
    }


        public APIProductDTO description(String description) {
        
        this.description = description;
        return this;
        }

    /**
        * A brief description about the API
    * @return description
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "This is a simple API for Pizza Shack online pizza delivery store", value = "A brief description about the API")
    
    public String getDescription() {
        return description;
    }


    public void setDescription(String description) {
        this.description = description;
    }


        public APIProductDTO provider(String provider) {
        
        this.provider = provider;
        return this;
        }

    /**
        * If the provider value is not given, the user invoking the API will be used as the provider. 
    * @return provider
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "admin", value = "If the provider value is not given, the user invoking the API will be used as the provider. ")
    
    public String getProvider() {
        return provider;
    }


    public void setProvider(String provider) {
        this.provider = provider;
    }


        public APIProductDTO hasThumbnail(Boolean hasThumbnail) {
        
        this.hasThumbnail = hasThumbnail;
        return this;
        }

    /**
        * Get hasThumbnail
    * @return hasThumbnail
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isHasThumbnail() {
        return hasThumbnail;
    }


    public void setHasThumbnail(Boolean hasThumbnail) {
        this.hasThumbnail = hasThumbnail;
    }


        public APIProductDTO state(StateEnum state) {
        
        this.state = state;
        return this;
        }

    /**
        * State of the API product. Only published api products are visible on the Devportal 
    * @return state
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "State of the API product. Only published api products are visible on the Devportal ")
    
    public StateEnum getState() {
        return state;
    }


    public void setState(StateEnum state) {
        this.state = state;
    }


        public APIProductDTO enableSchemaValidation(Boolean enableSchemaValidation) {
        
        this.enableSchemaValidation = enableSchemaValidation;
        return this;
        }

    /**
        * Get enableSchemaValidation
    * @return enableSchemaValidation
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isEnableSchemaValidation() {
        return enableSchemaValidation;
    }


    public void setEnableSchemaValidation(Boolean enableSchemaValidation) {
        this.enableSchemaValidation = enableSchemaValidation;
    }


        public APIProductDTO enableStore(Boolean enableStore) {
        
        this.enableStore = enableStore;
        return this;
        }

    /**
        * Get enableStore
    * @return enableStore
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "true", value = "")
    
    public Boolean isEnableStore() {
        return enableStore;
    }


    public void setEnableStore(Boolean enableStore) {
        this.enableStore = enableStore;
    }


        public APIProductDTO testKey(String testKey) {
        
        this.testKey = testKey;
        return this;
        }

    /**
        * Get testKey
    * @return testKey
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "8swdwj9080edejhj", value = "")
    
    public String getTestKey() {
        return testKey;
    }


    public void setTestKey(String testKey) {
        this.testKey = testKey;
    }


        public APIProductDTO isRevision(Boolean isRevision) {
        
        this.isRevision = isRevision;
        return this;
        }

    /**
        * Get isRevision
    * @return isRevision
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "false", value = "")
    
    public Boolean isIsRevision() {
        return isRevision;
    }


    public void setIsRevision(Boolean isRevision) {
        this.isRevision = isRevision;
    }


        public APIProductDTO revisionedApiProductId(String revisionedApiProductId) {
        
        this.revisionedApiProductId = revisionedApiProductId;
        return this;
        }

    /**
        * UUID of the api product registry artifact 
    * @return revisionedApiProductId
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "01234567-0123-0123-0123-012345678901", value = "UUID of the api product registry artifact ")
    
    public String getRevisionedApiProductId() {
        return revisionedApiProductId;
    }


    public void setRevisionedApiProductId(String revisionedApiProductId) {
        this.revisionedApiProductId = revisionedApiProductId;
    }


        public APIProductDTO revisionId(Integer revisionId) {
        
        this.revisionId = revisionId;
        return this;
        }

    /**
        * Get revisionId
    * @return revisionId
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "1", value = "")
    
    public Integer getRevisionId() {
        return revisionId;
    }


    public void setRevisionId(Integer revisionId) {
        this.revisionId = revisionId;
    }


        public APIProductDTO responseCachingEnabled(Boolean responseCachingEnabled) {
        
        this.responseCachingEnabled = responseCachingEnabled;
        return this;
        }

    /**
        * Get responseCachingEnabled
    * @return responseCachingEnabled
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "true", value = "")
    
    public Boolean isResponseCachingEnabled() {
        return responseCachingEnabled;
    }


    public void setResponseCachingEnabled(Boolean responseCachingEnabled) {
        this.responseCachingEnabled = responseCachingEnabled;
    }


        public APIProductDTO cacheTimeout(Integer cacheTimeout) {
        
        this.cacheTimeout = cacheTimeout;
        return this;
        }

    /**
        * Get cacheTimeout
    * @return cacheTimeout
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "300", value = "")
    
    public Integer getCacheTimeout() {
        return cacheTimeout;
    }


    public void setCacheTimeout(Integer cacheTimeout) {
        this.cacheTimeout = cacheTimeout;
    }


        public APIProductDTO visibility(VisibilityEnum visibility) {
        
        this.visibility = visibility;
        return this;
        }

    /**
        * The visibility level of the API. Accepts one of the following. PUBLIC, PRIVATE, RESTRICTED.
    * @return visibility
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "PUBLIC", value = "The visibility level of the API. Accepts one of the following. PUBLIC, PRIVATE, RESTRICTED.")
    
    public VisibilityEnum getVisibility() {
        return visibility;
    }


    public void setVisibility(VisibilityEnum visibility) {
        this.visibility = visibility;
    }


        public APIProductDTO visibleRoles(List<String> visibleRoles) {
        
        this.visibleRoles = visibleRoles;
        return this;
        }

    /**
        * The user roles that are able to access the API
    * @return visibleRoles
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "The user roles that are able to access the API")
    
    public List<String> getVisibleRoles() {
        return visibleRoles;
    }


    public void setVisibleRoles(List<String> visibleRoles) {
        this.visibleRoles = visibleRoles;
    }


        public APIProductDTO visibleTenants(List<String> visibleTenants) {
        
        this.visibleTenants = visibleTenants;
        return this;
        }

    /**
        * Get visibleTenants
    * @return visibleTenants
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<String> getVisibleTenants() {
        return visibleTenants;
    }


    public void setVisibleTenants(List<String> visibleTenants) {
        this.visibleTenants = visibleTenants;
    }


        public APIProductDTO accessControl(AccessControlEnum accessControl) {
        
        this.accessControl = accessControl;
        return this;
        }

    /**
        * Defines whether the API Product is restricted to certain set of publishers or creators or is it visible to all the publishers and creators. If the accessControl restriction is none, this API Product can be modified by all the publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators, based on the restriction. 
    * @return accessControl
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Defines whether the API Product is restricted to certain set of publishers or creators or is it visible to all the publishers and creators. If the accessControl restriction is none, this API Product can be modified by all the publishers and creators, if not it can only be viewable/modifiable by certain set of publishers and creators, based on the restriction. ")
    
    public AccessControlEnum getAccessControl() {
        return accessControl;
    }


    public void setAccessControl(AccessControlEnum accessControl) {
        this.accessControl = accessControl;
    }


        public APIProductDTO accessControlRoles(List<String> accessControlRoles) {
        
        this.accessControlRoles = accessControlRoles;
        return this;
        }

    /**
        * The user roles that are able to view/modify as API Product publisher or creator.
    * @return accessControlRoles
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "The user roles that are able to view/modify as API Product publisher or creator.")
    
    public List<String> getAccessControlRoles() {
        return accessControlRoles;
    }


    public void setAccessControlRoles(List<String> accessControlRoles) {
        this.accessControlRoles = accessControlRoles;
    }


        public APIProductDTO gatewayEnvironments(List<String> gatewayEnvironments) {
        
        this.gatewayEnvironments = gatewayEnvironments;
        return this;
        }

    /**
        * List of gateway environments the API Product is available 
    * @return gatewayEnvironments
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"Production and Sandbox\"]", value = "List of gateway environments the API Product is available ")
    
    public List<String> getGatewayEnvironments() {
        return gatewayEnvironments;
    }


    public void setGatewayEnvironments(List<String> gatewayEnvironments) {
        this.gatewayEnvironments = gatewayEnvironments;
    }


        public APIProductDTO apiType(ApiTypeEnum apiType) {
        
        this.apiType = apiType;
        return this;
        }

    /**
        * The API type to be used. Accepted values are API, APIPRODUCT
    * @return apiType
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "APIPRODUCT", value = "The API type to be used. Accepted values are API, APIPRODUCT")
    
    public ApiTypeEnum getApiType() {
        return apiType;
    }


    public void setApiType(ApiTypeEnum apiType) {
        this.apiType = apiType;
    }


        public APIProductDTO transport(List<String> transport) {
        
        this.transport = transport;
        return this;
        }

    /**
        * Supported transports for the API (http and/or https). 
    * @return transport
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"http\",\"https\"]", value = "Supported transports for the API (http and/or https). ")
    
    public List<String> getTransport() {
        return transport;
    }


    public void setTransport(List<String> transport) {
        this.transport = transport;
    }


        public APIProductDTO tags(List<String> tags) {
        
        this.tags = tags;
        return this;
        }

    /**
        * Get tags
    * @return tags
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"pizza\",\"food\"]", value = "")
    
    public List<String> getTags() {
        return tags;
    }


    public void setTags(List<String> tags) {
        this.tags = tags;
    }


        public APIProductDTO policies(List<String> policies) {
        
        this.policies = policies;
        return this;
        }

    /**
        * Get policies
    * @return policies
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"Unlimited\"]", value = "")
    
    public List<String> getPolicies() {
        return policies;
    }


    public void setPolicies(List<String> policies) {
        this.policies = policies;
    }


        public APIProductDTO apiThrottlingPolicy(String apiThrottlingPolicy) {
        
        this.apiThrottlingPolicy = apiThrottlingPolicy;
        return this;
        }

    /**
        * The API level throttling policy selected for the particular API Product
    * @return apiThrottlingPolicy
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Unlimited", value = "The API level throttling policy selected for the particular API Product")
    
    public String getApiThrottlingPolicy() {
        return apiThrottlingPolicy;
    }


    public void setApiThrottlingPolicy(String apiThrottlingPolicy) {
        this.apiThrottlingPolicy = apiThrottlingPolicy;
    }


        public APIProductDTO authorizationHeader(String authorizationHeader) {
        
        this.authorizationHeader = authorizationHeader;
        return this;
        }

    /**
        * Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified in tenant or system level will be used. 
    * @return authorizationHeader
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "Authorization", value = "Name of the Authorization header used for invoking the API. If it is not set, Authorization header name specified in tenant or system level will be used. ")
    
    public String getAuthorizationHeader() {
        return authorizationHeader;
    }


    public void setAuthorizationHeader(String authorizationHeader) {
        this.authorizationHeader = authorizationHeader;
    }


        public APIProductDTO securityScheme(List<String> securityScheme) {
        
        this.securityScheme = securityScheme;
        return this;
        }

    /**
        * Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If it is not set OAuth2 will be set as the security for the current API. 
    * @return securityScheme
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[\"oauth2\"]", value = "Types of API security, the current API secured with. It can be either OAuth2 or mutual SSL or both. If it is not set OAuth2 will be set as the security for the current API. ")
    
    public List<String> getSecurityScheme() {
        return securityScheme;
    }


    public void setSecurityScheme(List<String> securityScheme) {
        this.securityScheme = securityScheme;
    }


        public APIProductDTO subscriptionAvailability(SubscriptionAvailabilityEnum subscriptionAvailability) {
        
        this.subscriptionAvailability = subscriptionAvailability;
        return this;
        }

    /**
        * The subscription availability. Accepts one of the following. CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.
    * @return subscriptionAvailability
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "CURRENT_TENANT", value = "The subscription availability. Accepts one of the following. CURRENT_TENANT, ALL_TENANTS or SPECIFIC_TENANTS.")
    
    public SubscriptionAvailabilityEnum getSubscriptionAvailability() {
        return subscriptionAvailability;
    }


    public void setSubscriptionAvailability(SubscriptionAvailabilityEnum subscriptionAvailability) {
        this.subscriptionAvailability = subscriptionAvailability;
    }


        public APIProductDTO subscriptionAvailableTenants(List<String> subscriptionAvailableTenants) {
        
        this.subscriptionAvailableTenants = subscriptionAvailableTenants;
        return this;
        }

    /**
        * Get subscriptionAvailableTenants
    * @return subscriptionAvailableTenants
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<String> getSubscriptionAvailableTenants() {
        return subscriptionAvailableTenants;
    }


    public void setSubscriptionAvailableTenants(List<String> subscriptionAvailableTenants) {
        this.subscriptionAvailableTenants = subscriptionAvailableTenants;
    }


        public APIProductDTO additionalProperties(Map<String, String> additionalProperties) {
        
        this.additionalProperties = additionalProperties;
        return this;
        }

    /**
        * Map of custom properties of API
    * @return additionalProperties
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "Map of custom properties of API")
    
    public Map<String, String> getAdditionalProperties() {
        return additionalProperties;
    }


    public void setAdditionalProperties(Map<String, String> additionalProperties) {
        this.additionalProperties = additionalProperties;
    }


        public APIProductDTO monetization(APIMonetizationInfoDTO monetization) {
        
        this.monetization = monetization;
        return this;
        }

    /**
        * Get monetization
    * @return monetization
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIMonetizationInfoDTO getMonetization() {
        return monetization;
    }


    public void setMonetization(APIMonetizationInfoDTO monetization) {
        this.monetization = monetization;
    }


        public APIProductDTO businessInformation(APIProductBusinessInformationDTO businessInformation) {
        
        this.businessInformation = businessInformation;
        return this;
        }

    /**
        * Get businessInformation
    * @return businessInformation
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APIProductBusinessInformationDTO getBusinessInformation() {
        return businessInformation;
    }


    public void setBusinessInformation(APIProductBusinessInformationDTO businessInformation) {
        this.businessInformation = businessInformation;
    }


        public APIProductDTO corsConfiguration(APICorsConfigurationDTO corsConfiguration) {
        
        this.corsConfiguration = corsConfiguration;
        return this;
        }

    /**
        * Get corsConfiguration
    * @return corsConfiguration
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public APICorsConfigurationDTO getCorsConfiguration() {
        return corsConfiguration;
    }


    public void setCorsConfiguration(APICorsConfigurationDTO corsConfiguration) {
        this.corsConfiguration = corsConfiguration;
    }


        public APIProductDTO createdTime(String createdTime) {
        
        this.createdTime = createdTime;
        return this;
        }

    /**
        * Get createdTime
    * @return createdTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getCreatedTime() {
        return createdTime;
    }


    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }


        public APIProductDTO lastUpdatedTime(String lastUpdatedTime) {
        
        this.lastUpdatedTime = lastUpdatedTime;
        return this;
        }

    /**
        * Get lastUpdatedTime
    * @return lastUpdatedTime
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public String getLastUpdatedTime() {
        return lastUpdatedTime;
    }


    public void setLastUpdatedTime(String lastUpdatedTime) {
        this.lastUpdatedTime = lastUpdatedTime;
    }


        public APIProductDTO apis(List<ProductAPIDTO> apis) {
        
        this.apis = apis;
        return this;
        }

    /**
        * APIs and resources in the API Product. 
    * @return apis
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[{\"name\":\"PizzaShackAPI\",\"apiId\":\"01234567-0123-0123-0123-012345678901\",\"version\":\"1.0\",\"operations\":[{\"target\":\"/order/{orderId}\",\"verb\":\"POST\",\"authType\":\"Application & Application User\",\"throttlingPolicy\":\"Unlimited\"},{\"target\":\"/menu\",\"verb\":\"GET\",\"authType\":\"Application & Application User\",\"throttlingPolicy\":\"Unlimited\"}]}]", value = "APIs and resources in the API Product. ")
    
    public List<ProductAPIDTO> getApis() {
        return apis;
    }


    public void setApis(List<ProductAPIDTO> apis) {
        this.apis = apis;
    }


        public APIProductDTO scopes(List<APIScopeDTO> scopes) {
        
        this.scopes = scopes;
        return this;
        }

    /**
        * Get scopes
    * @return scopes
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "")
    
    public List<APIScopeDTO> getScopes() {
        return scopes;
    }


    public void setScopes(List<APIScopeDTO> scopes) {
        this.scopes = scopes;
    }


        public APIProductDTO categories(List<String> categories) {
        
        this.categories = categories;
        return this;
        }

    /**
        * API categories 
    * @return categories
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "[]", value = "API categories ")
    
    public List<String> getCategories() {
        return categories;
    }


    public void setCategories(List<String> categories) {
        this.categories = categories;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            APIProductDTO apIProduct = (APIProductDTO) o;
            return Objects.equals(this.id, apIProduct.id) &&
            Objects.equals(this.name, apIProduct.name) &&
            Objects.equals(this.context, apIProduct.context) &&
            Objects.equals(this.description, apIProduct.description) &&
            Objects.equals(this.provider, apIProduct.provider) &&
            Objects.equals(this.hasThumbnail, apIProduct.hasThumbnail) &&
            Objects.equals(this.state, apIProduct.state) &&
            Objects.equals(this.enableSchemaValidation, apIProduct.enableSchemaValidation) &&
            Objects.equals(this.enableStore, apIProduct.enableStore) &&
            Objects.equals(this.testKey, apIProduct.testKey) &&
            Objects.equals(this.isRevision, apIProduct.isRevision) &&
            Objects.equals(this.revisionedApiProductId, apIProduct.revisionedApiProductId) &&
            Objects.equals(this.revisionId, apIProduct.revisionId) &&
            Objects.equals(this.responseCachingEnabled, apIProduct.responseCachingEnabled) &&
            Objects.equals(this.cacheTimeout, apIProduct.cacheTimeout) &&
            Objects.equals(this.visibility, apIProduct.visibility) &&
            Objects.equals(this.visibleRoles, apIProduct.visibleRoles) &&
            Objects.equals(this.visibleTenants, apIProduct.visibleTenants) &&
            Objects.equals(this.accessControl, apIProduct.accessControl) &&
            Objects.equals(this.accessControlRoles, apIProduct.accessControlRoles) &&
            Objects.equals(this.gatewayEnvironments, apIProduct.gatewayEnvironments) &&
            Objects.equals(this.apiType, apIProduct.apiType) &&
            Objects.equals(this.transport, apIProduct.transport) &&
            Objects.equals(this.tags, apIProduct.tags) &&
            Objects.equals(this.policies, apIProduct.policies) &&
            Objects.equals(this.apiThrottlingPolicy, apIProduct.apiThrottlingPolicy) &&
            Objects.equals(this.authorizationHeader, apIProduct.authorizationHeader) &&
            Objects.equals(this.securityScheme, apIProduct.securityScheme) &&
            Objects.equals(this.subscriptionAvailability, apIProduct.subscriptionAvailability) &&
            Objects.equals(this.subscriptionAvailableTenants, apIProduct.subscriptionAvailableTenants) &&
            Objects.equals(this.additionalProperties, apIProduct.additionalProperties) &&
            Objects.equals(this.monetization, apIProduct.monetization) &&
            Objects.equals(this.businessInformation, apIProduct.businessInformation) &&
            Objects.equals(this.corsConfiguration, apIProduct.corsConfiguration) &&
            Objects.equals(this.createdTime, apIProduct.createdTime) &&
            Objects.equals(this.lastUpdatedTime, apIProduct.lastUpdatedTime) &&
            Objects.equals(this.apis, apIProduct.apis) &&
            Objects.equals(this.scopes, apIProduct.scopes) &&
            Objects.equals(this.categories, apIProduct.categories);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id, name, context, description, provider, hasThumbnail, state, enableSchemaValidation, enableStore, testKey, isRevision, revisionedApiProductId, revisionId, responseCachingEnabled, cacheTimeout, visibility, visibleRoles, visibleTenants, accessControl, accessControlRoles, gatewayEnvironments, apiType, transport, tags, policies, apiThrottlingPolicy, authorizationHeader, securityScheme, subscriptionAvailability, subscriptionAvailableTenants, additionalProperties, monetization, businessInformation, corsConfiguration, createdTime, lastUpdatedTime, apis, scopes, categories);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class APIProductDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    context: ").append(toIndentedString(context)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    provider: ").append(toIndentedString(provider)).append("\n");
    sb.append("    hasThumbnail: ").append(toIndentedString(hasThumbnail)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    enableSchemaValidation: ").append(toIndentedString(enableSchemaValidation)).append("\n");
    sb.append("    enableStore: ").append(toIndentedString(enableStore)).append("\n");
    sb.append("    testKey: ").append(toIndentedString(testKey)).append("\n");
    sb.append("    isRevision: ").append(toIndentedString(isRevision)).append("\n");
    sb.append("    revisionedApiProductId: ").append(toIndentedString(revisionedApiProductId)).append("\n");
    sb.append("    revisionId: ").append(toIndentedString(revisionId)).append("\n");
    sb.append("    responseCachingEnabled: ").append(toIndentedString(responseCachingEnabled)).append("\n");
    sb.append("    cacheTimeout: ").append(toIndentedString(cacheTimeout)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    visibleRoles: ").append(toIndentedString(visibleRoles)).append("\n");
    sb.append("    visibleTenants: ").append(toIndentedString(visibleTenants)).append("\n");
    sb.append("    accessControl: ").append(toIndentedString(accessControl)).append("\n");
    sb.append("    accessControlRoles: ").append(toIndentedString(accessControlRoles)).append("\n");
    sb.append("    gatewayEnvironments: ").append(toIndentedString(gatewayEnvironments)).append("\n");
    sb.append("    apiType: ").append(toIndentedString(apiType)).append("\n");
    sb.append("    transport: ").append(toIndentedString(transport)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    policies: ").append(toIndentedString(policies)).append("\n");
    sb.append("    apiThrottlingPolicy: ").append(toIndentedString(apiThrottlingPolicy)).append("\n");
    sb.append("    authorizationHeader: ").append(toIndentedString(authorizationHeader)).append("\n");
    sb.append("    securityScheme: ").append(toIndentedString(securityScheme)).append("\n");
    sb.append("    subscriptionAvailability: ").append(toIndentedString(subscriptionAvailability)).append("\n");
    sb.append("    subscriptionAvailableTenants: ").append(toIndentedString(subscriptionAvailableTenants)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("    monetization: ").append(toIndentedString(monetization)).append("\n");
    sb.append("    businessInformation: ").append(toIndentedString(businessInformation)).append("\n");
    sb.append("    corsConfiguration: ").append(toIndentedString(corsConfiguration)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    lastUpdatedTime: ").append(toIndentedString(lastUpdatedTime)).append("\n");
    sb.append("    apis: ").append(toIndentedString(apis)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

