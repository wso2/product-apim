/*
 * WSO2 API Manager - Publisher API
 * This document specifies a **RESTful API** for WSO2 **API Manager** - **Publisher**.  # Authentication The Publisher REST API is protected using OAuth2 and access control is achieved through scopes. Before you start invoking the the API you need to obtain an access token with the required scopes. This guide will walk you through the steps that you will need to follow to obtain an access token. First you need to obtain the consumer key/secret key pair by calling the dynamic client registration (DCR) endpoint. You can add your preferred grant types in the payload. A Sample payload is shown below. ```   {   \"callbackUrl\":\"www.google.lk\",   \"clientName\":\"rest_api_publisher\",   \"owner\":\"admin\",   \"grantType\":\"client_credentials password refresh_token\",   \"saasApp\":true   } ``` Create a file (payload.json) with the above sample payload, and use the cURL shown bellow to invoke the DCR endpoint. Authorization header of this should contain the base64 encoded admin username and password. **Format of the request** ```   curl -X POST -H \"Authorization: Basic Base64(admin_username:admin_password)\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://<host>:<servlet_port>/client-registration/v0.17/register ``` **Sample request** ```   curl -X POST -H \"Authorization: Basic YWRtaW46YWRtaW4=\" -H \"Content-Type: application/json\"   \\ -d @payload.json https://localhost:9443/client-registration/v0.17/register ``` Following is a sample response after invoking the above curl. ``` { \"clientId\": \"fOCi4vNJ59PpHucC2CAYfYuADdMa\", \"clientName\": \"rest_api_publisher\", \"callBackURL\": \"www.google.lk\", \"clientSecret\": \"a4FwHlq0iCIKVs2MPIIDnepZnYMa\", \"isSaasApplication\": true, \"appOwner\": \"admin\", \"jsonString\": \"{\\\"grant_types\\\":\\\"client_credentials password refresh_token\\\",\\\"redirect_uris\\\":\\\"www.google.lk\\\",\\\"client_name\\\":\\\"rest_api123\\\"}\", \"jsonAppAttribute\": \"{}\", \"tokenType\": null } ``` Next you must use the above client id and secret to obtain the access token. We will be using the password grant type for this, you can use any grant type you desire. You also need to add the proper **scope** when getting the access token. All possible scopes for publisher REST API can be viewed in **OAuth2 Security** section of this document and scope for each resource is given in **authorization** section of resource documentation. Following is the format of the request if you are using the password grant type. ``` curl -k -d \"grant_type=password&username=<admin_username>&password=<admin_passowrd&scope=<scopes seperated by space>\" \\ -H \"Authorization: Basic base64(cliet_id:client_secret)\" \\ https://<host>:<servlet_port>/oauth2/token ``` **Sample request** ``` curl https://localhost:9443/oauth2/token -k \\ -H \"Authorization: Basic Zk9DaTR2Tko1OVBwSHVjQzJDQVlmWXVBRGRNYTphNEZ3SGxxMGlDSUtWczJNUElJRG5lcFpuWU1h\" \\ -d \"grant_type=password&username=admin&password=admin&scope=apim:api_view apim:api_create\" ``` Shown below is a sample response to the above request. ``` { \"access_token\": \"e79bda48-3406-3178-acce-f6e4dbdcbb12\", \"refresh_token\": \"a757795d-e69f-38b8-bd85-9aded677a97c\", \"scope\": \"apim:api_create apim:api_view\", \"token_type\": \"Bearer\", \"expires_in\": 3600 } ``` Now you have a valid access token, which you can use to invoke an API. Navigate through the API descriptions to find the required API, obtain an access token as described above and invoke the API with the authentication header. If you use a different authentication mechanism, this process may change.  # Try out in Postman If you want to try-out the embedded postman collection with \"Run in Postman\" option, please follow the guidelines listed below. * All of the OAuth2 secured endpoints have been configured with an Authorization Bearer header with a parameterized access token. Before invoking any REST API resource make sure you run the `Register DCR Application` and `Generate Access Token` requests to fetch an access token with all required scopes. * Make sure you have an API Manager instance up and running. * Update the `basepath` parameter to match the hostname and port of the APIM instance.  [![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/a09044034b5c3c1b01a9) 
 *
 * The version of the OpenAPI document: v4
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.wso2.am.integration.clients.publisher.api.v1.dto;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import com.fasterxml.jackson.annotation.JsonCreator;
/**
* AdvertiseInfoDTO
*/

public class AdvertiseInfoDTO {
        public static final String SERIALIZED_NAME_ADVERTISED = "advertised";
        @SerializedName(SERIALIZED_NAME_ADVERTISED)
            private Boolean advertised;

        public static final String SERIALIZED_NAME_API_EXTERNAL_PRODUCTION_ENDPOINT = "apiExternalProductionEndpoint";
        @SerializedName(SERIALIZED_NAME_API_EXTERNAL_PRODUCTION_ENDPOINT)
            private String apiExternalProductionEndpoint;

        public static final String SERIALIZED_NAME_API_EXTERNAL_SANDBOX_ENDPOINT = "apiExternalSandboxEndpoint";
        @SerializedName(SERIALIZED_NAME_API_EXTERNAL_SANDBOX_ENDPOINT)
            private String apiExternalSandboxEndpoint;

        public static final String SERIALIZED_NAME_ORIGINAL_DEV_PORTAL_URL = "originalDevPortalUrl";
        @SerializedName(SERIALIZED_NAME_ORIGINAL_DEV_PORTAL_URL)
            private String originalDevPortalUrl;

        public static final String SERIALIZED_NAME_API_OWNER = "apiOwner";
        @SerializedName(SERIALIZED_NAME_API_OWNER)
            private String apiOwner;

            /**
* Gets or Sets vendor
*/
    @JsonAdapter(VendorEnum.Adapter.class)
public enum VendorEnum {
        WSO2("WSO2"),
        
        AWS("AWS");

private String value;

VendorEnum(String value) {
this.value = value;
}

public String getValue() {
return value;
}

@Override
public String toString() {
return String.valueOf(value);
}

public static VendorEnum fromValue(String value) {
    for (VendorEnum b : VendorEnum.values()) {
    if (b.name().equals(value)) {
        return b;
    }
}
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
}

    public static class Adapter extends TypeAdapter<VendorEnum> {
    @Override
    public void write(final JsonWriter jsonWriter, final VendorEnum enumeration) throws IOException {
    jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VendorEnum read(final JsonReader jsonReader) throws IOException {
    String value =  jsonReader.nextString();
    return VendorEnum.fromValue(value);
    }
    }
}

        public static final String SERIALIZED_NAME_VENDOR = "vendor";
        @SerializedName(SERIALIZED_NAME_VENDOR)
            private VendorEnum vendor = VendorEnum.WSO2;


        public AdvertiseInfoDTO advertised(Boolean advertised) {
        
        this.advertised = advertised;
        return this;
        }

    /**
        * Get advertised
    * @return advertised
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "true", value = "")
    
    public Boolean isAdvertised() {
        return advertised;
    }


    public void setAdvertised(Boolean advertised) {
        this.advertised = advertised;
    }


        public AdvertiseInfoDTO apiExternalProductionEndpoint(String apiExternalProductionEndpoint) {
        
        this.apiExternalProductionEndpoint = apiExternalProductionEndpoint;
        return this;
        }

    /**
        * Get apiExternalProductionEndpoint
    * @return apiExternalProductionEndpoint
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "https://localhost:9443/devportal", value = "")
    
    public String getApiExternalProductionEndpoint() {
        return apiExternalProductionEndpoint;
    }


    public void setApiExternalProductionEndpoint(String apiExternalProductionEndpoint) {
        this.apiExternalProductionEndpoint = apiExternalProductionEndpoint;
    }


        public AdvertiseInfoDTO apiExternalSandboxEndpoint(String apiExternalSandboxEndpoint) {
        
        this.apiExternalSandboxEndpoint = apiExternalSandboxEndpoint;
        return this;
        }

    /**
        * Get apiExternalSandboxEndpoint
    * @return apiExternalSandboxEndpoint
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "https://localhost:9443/devportal", value = "")
    
    public String getApiExternalSandboxEndpoint() {
        return apiExternalSandboxEndpoint;
    }


    public void setApiExternalSandboxEndpoint(String apiExternalSandboxEndpoint) {
        this.apiExternalSandboxEndpoint = apiExternalSandboxEndpoint;
    }


        public AdvertiseInfoDTO originalDevPortalUrl(String originalDevPortalUrl) {
        
        this.originalDevPortalUrl = originalDevPortalUrl;
        return this;
        }

    /**
        * Get originalDevPortalUrl
    * @return originalDevPortalUrl
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "https://localhost:9443/devportal", value = "")
    
    public String getOriginalDevPortalUrl() {
        return originalDevPortalUrl;
    }


    public void setOriginalDevPortalUrl(String originalDevPortalUrl) {
        this.originalDevPortalUrl = originalDevPortalUrl;
    }


        public AdvertiseInfoDTO apiOwner(String apiOwner) {
        
        this.apiOwner = apiOwner;
        return this;
        }

    /**
        * Get apiOwner
    * @return apiOwner
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(example = "admin", value = "")
    
    public String getApiOwner() {
        return apiOwner;
    }


    public void setApiOwner(String apiOwner) {
        this.apiOwner = apiOwner;
    }


        public AdvertiseInfoDTO vendor(VendorEnum vendor) {
        
        this.vendor = vendor;
        return this;
        }

    /**
        * Get vendor
    * @return vendor
    **/
        @javax.annotation.Nullable
      @ApiModelProperty(value = "")
    
    public VendorEnum getVendor() {
        return vendor;
    }


    public void setVendor(VendorEnum vendor) {
        this.vendor = vendor;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
        return true;
        }
        if (o == null || getClass() != o.getClass()) {
        return false;
        }
            AdvertiseInfoDTO advertiseInfo = (AdvertiseInfoDTO) o;
            return Objects.equals(this.advertised, advertiseInfo.advertised) &&
            Objects.equals(this.apiExternalProductionEndpoint, advertiseInfo.apiExternalProductionEndpoint) &&
            Objects.equals(this.apiExternalSandboxEndpoint, advertiseInfo.apiExternalSandboxEndpoint) &&
            Objects.equals(this.originalDevPortalUrl, advertiseInfo.originalDevPortalUrl) &&
            Objects.equals(this.apiOwner, advertiseInfo.apiOwner) &&
            Objects.equals(this.vendor, advertiseInfo.vendor);
    }

    @Override
    public int hashCode() {
        return Objects.hash(advertised, apiExternalProductionEndpoint, apiExternalSandboxEndpoint, originalDevPortalUrl, apiOwner, vendor);
    }


@Override
public String toString() {
StringBuilder sb = new StringBuilder();
sb.append("class AdvertiseInfoDTO {\n");
    sb.append("    advertised: ").append(toIndentedString(advertised)).append("\n");
    sb.append("    apiExternalProductionEndpoint: ").append(toIndentedString(apiExternalProductionEndpoint)).append("\n");
    sb.append("    apiExternalSandboxEndpoint: ").append(toIndentedString(apiExternalSandboxEndpoint)).append("\n");
    sb.append("    originalDevPortalUrl: ").append(toIndentedString(originalDevPortalUrl)).append("\n");
    sb.append("    apiOwner: ").append(toIndentedString(apiOwner)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
sb.append("}");
return sb.toString();
}

/**
* Convert the given object to string with each line indented by 4 spaces
* (except the first line).
*/
private String toIndentedString(Object o) {
if (o == null) {
return "null";
}
return o.toString().replace("\n", "\n    ");
}

}

