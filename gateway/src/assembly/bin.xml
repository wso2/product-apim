<!--
  ~ /*
  ~ * Copyright (c) 2017, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~ *
  ~ * Licensed under the Apache License, Version 2.0 (the "License");
  ~ * you may not use this file except in compliance with the License.
  ~ * You may obtain a copy of the License at
  ~ *
  ~ * http://www.apache.org/licenses/LICENSE-2.0
  ~ *
  ~ * Unless required by applicable law or agreed to in writing, software
  ~ * distributed under the License is distributed on an "AS IS" BASIS,
  ~ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ * See the License for the specific language governing permissions and
  ~ * limitations under the License.
  ~ */
  -->
<assembly>
    <includeBaseDirectory>true</includeBaseDirectory>
    <baseDirectory>${artifactId}-${project.version}</baseDirectory>
    <id>APIM Gateway Distribution</id>
    <formats>
        <format>zip</format>
    </formats>

    <fileSets>

        <fileSet>
            <directory>./</directory>
            <outputDirectory>.</outputDirectory>
            <includes>
                <include>LICENSE</include>
            </includes>
        </fileSet>

        <fileSet>
            <directory>conf</directory>
            <outputDirectory>bre/conf</outputDirectory>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>logs</directory>
            <outputDirectory>logs</outputDirectory>
            <fileMode>644</fileMode>
        </fileSet>
  
        <fileSet>
            <directory>jms-client-libs</directory>
            <outputDirectory>bre/lib</outputDirectory>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>./ballerina-home/resources/security</directory>
            <outputDirectory>bre/security</outputDirectory>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/ballerina-native-jar/META-INF/natives
            </directory>
            <outputDirectory>src</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/apim-ballerina-configs-zip/apim-ballerina-configs-${carbon.apimgt.version}
            </directory>
            <outputDirectory>samples</outputDirectory>
            <excludes>
                <exclude>target/**</exclude>
                <exclude>scripts/**</exclude>
                <exclude>pom.xml</exclude>
                <exclude>README.txt</exclude>
                <exclude>LICENSE.txt</exclude>
                <exclude>release-notes.html</exclude>
                <exclude>**/*.ipr</exclude>
                <exclude>**/*.iwr</exclude>
                <exclude>**/*.eclipse</exclude>
                <exclude>**/*.iml</exclude>
            </excludes>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/apim-ballerina-configs-zip/apim-ballerina-configs-${carbon.apimgt.version}
            </directory>
            <outputDirectory>./</outputDirectory>
            <includes>
                <include>*.bsz</include>
            </includes>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>
                ${project.build.directory}/extracted-distributions/apim-ballerina-configs-zip/apim-ballerina-configs-${carbon.apimgt.version}
            </directory>
            <outputDirectory>./handler</outputDirectory>
            <includes>
                <include>*.bmz</include>
            </includes>
            <fileMode>644</fileMode>
        </fileSet>

        <fileSet>
            <directory>ballerina_lib/handler</directory>
            <outputDirectory>handler</outputDirectory>
        </fileSet>
        <fileSet>
            <directory>ballerina_lib/services</directory>
            <outputDirectory>.</outputDirectory>
        </fileSet>

        <fileSet> <!-- Create empty Bal file deployment directory -->
            <outputDirectory>./org/wso2/carbon/apimgt/gateway</outputDirectory>
            <excludes><exclude>**/*</exclude></excludes>
        </fileSet>

        <fileSet> <!-- microgateway with the ReadMe -->
            <directory>microgateway</directory>
            <includes><include>README.txt</include></includes>
        </fileSet>
    </fileSets>

    <files>
        <file>
            <source>bin/version.txt</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>bin/ballerina</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>bin/ballerina.bat</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>bin/ciphertool</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>755</fileMode>
        </file>
        <file>
            <source>bin/ciphertool.bat</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>bin/microgatewayinit.sh</source>
            <outputDirectory>bin/</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>LICENSE.txt</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>copyright.txt</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
        <file>
            <source>README.txt</source>
            <outputDirectory>.</outputDirectory>
            <filtered>true</filtered>
            <fileMode>644</fileMode>
        </file>
    </files>

    <dependencySets>
        <dependencySet>
            <outputDirectory>bre/lib</outputDirectory>
            <scope>runtime</scope>
            <includes>
                <include>org.ballerinalang:ballerina-core:jar</include>
                <include>org.ballerinalang:ballerina-launcher:jar</include>
                <include>org.ballerinalang:ballerina-native:jar</include>
                <include>org.ballerinalang:ballerina-logging:jar</include>
                <include>org.wso2.orbit.org.antlr:antlr4-runtime</include>
                <include>org.wso2.carbon.transport:org.wso2.carbon.transport.http.netty</include>
                <include>org.wso2.carbon.transport:org.wso2.carbon.transport.file</include>
                <include>org.wso2.carbon.transport:org.wso2.carbon.connector.framework</include>
                <include>org.wso2.carbon.transport:org.wso2.carbon.transport.jms</include>
                <include>org.wso2.carbon.messaging:org.wso2.carbon.messaging</include>
                <include>org.wso2.carbon.config:org.wso2.carbon.config</include>
                <include>org.wso2.carbon.secvault:org.wso2.carbon.secvault</include>
                <include>org.wso2.carbon.utils:carbon-utils</include>
                <include>org.apache.commons.wso2:commons-vfs2</include>
                <include>org.wso2.orbit.net.sf.saxon:Saxon-HE</include>
                <include>com.fasterxml.jackson.core:jackson-databind</include>
                <include>com.fasterxml.jackson.core:jackson-core</include>
                <include>com.fasterxml.jackson.core:jackson-annotations</include>
                <include>com.jayway.jsonpath:json-path</include>
                <include>org.apache.ws.commons.axiom:axiom-api</include>
                <include>org.apache.ws.commons.axiom:axiom-impl</include>
                <include>org.apache.ws.commons.axiom:axiom-dom</include>
                <include>jaxen:jaxen</include>
                <include>org.wso2.orbit.org.apache.tapestry:tapestry-json</include>
                <include>org.apache.geronimo.specs:geronimo-activation_1.1_spec</include>
                <include>org.apache.geronimo.specs:geronimo-stax-api_1.0_spec</include>
                <include>org.apache.james:apache-mime4j-core</include>
                <include>com.beust:jcommander</include>
                <include>org.slf4j:slf4j-api</include>
                <include>org.slf4j:slf4j-jdk14</include>
                <include>io.netty:netty-common</include>
                <include>io.netty:netty-buffer</include>
                <include>io.netty:netty-transport</include>
                <include>io.netty:netty-handler</include>
                <include>io.netty:netty-codec</include>
                <include>io.netty:netty-codec-http</include>
                <include>io.netty:netty-codec-http2</include>
                <include>io.netty:netty-resolver</include>
                <include>commons-pool.wso2:commons-pool</include>
                <include>org.apache.commons:commons-pool2</include>
                <include>org.wso2.orbit.org.yaml:snakeyaml</include>
                <include>commons-logging:commons-logging</include>
                <include>org.wso2.staxon:staxon-core</include>
                <include>org.apache.commons:commons-lang3</include>
                <include>javax.websocket:javax.websocket-api</include>
                <include>org.wso2.carbon:org.wso2.carbon.core:jar</include>
                <include>com.zaxxer:HikariCP</include>
                <include>javax.jms:javax.jms-api</include>
                <include>javax.transaction:javax.transaction-api</include>
                <include>org.atomikos.wso2:atomikos</include>
                <include>org.wso2.carbon.apimgt:org.wso2.carbon.apimgt.ballerina.native</include>
                <include>org.wso2.carbon.caching:org.wso2.carbon.caching</include>
                <include>org.wso2.carbon.apimgt:org.wso2.carbon.apimgt.ballerina.publisher</include>
                <include>org.wso2.carbon.analytics:org.wso2.carbon.databridge.agent</include>
                <include>org.wso2.carbon.analytics:org.wso2.carbon.databridge.commons.binary</include>
                <include>org.wso2.carbon.analytics:org.wso2.carbon.databridge.commons.thrift</include>
                <include>org.wso2.carbon.analytics:org.wso2.carbon.databridge.commons</include>
                <include>libthrift.wso2:libthrift</include>
                <include>org.wso2.orbit.com.lmax:disruptor</include>
                <include>org.json.wso2:json</include>
            </includes>
        </dependencySet>

        <!-- Cipher tool specific artifacts -->
        <dependencySet>
            <outputDirectory>bre/lib/bootstrap/tools/ciphertool</outputDirectory>
            <includes>
                <include>org.wso2.carbon.secvault:org.wso2.carbon.secvault.ciphertool:jar</include>
            </includes>
        </dependencySet>
    </dependencySets>
</assembly>
